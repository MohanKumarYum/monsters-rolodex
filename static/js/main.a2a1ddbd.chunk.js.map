{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","toLowerCase","state","fetch","then","response","json","users","catch","console","error","this","filteredMonsters","filter","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,kBAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OAEE,cADE,CACF,OAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,WACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAsBJ,EAAQK,MAArBL,EAAQI,IACjB,4BAAIJ,EAAQM,aCRLC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAExB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCLvCM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAOX,UAAU,SACfY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCLG,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,MAAMC,iBAZhE,EAAKC,MAAQ,CACXd,SAAU,GACVU,YAAa,IAJH,E,gEAQO,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAET,SAAUmB,OAC1CC,MAAMC,QAAQC,S,+BAIT,IAAD,EACyBC,KAAKT,MAA/Bd,EADC,EACDA,SAAUU,EADT,EACSA,YACZc,EAAmBxB,EAASyB,QAAO,SAACjC,GAAD,OACvCA,EAAQK,KAAKgB,cAAca,SAAShB,MAGpC,OAEE,sBAAKjB,UAAU,MAAf,UACE,kDACF,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAcmB,KAAKnB,eAErB,cAAC,EAAD,CAAUJ,SAAUwB,W,GA/BRG,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a2a1ddbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({monster}) => {\r\n  return (\r\n      // console.log(`From Card`,props),\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monsters\"\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=250x250`}\r\n      />\r\n      <h2 key={monster.id}>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component.jsx\";\r\n\r\nexport const CardList = ({monsters}) => {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => <Card key={monster.id} monster={monster}/>)}\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default CardList;\r\n","import React from 'react';\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input className=\"search\"\r\n          type=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n    )\r\n}","import { Component } from \"react\";\r\nimport \"./App.css\";\r\n//  This below import works when \"export default Cardlist\" syntax is used.\r\n// import CardList from \"./components/card-list.components.jsx\";\r\n// When \"export default const CardList = () => {}\" syntax is used, destructure and import as below.\r\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }))\r\n      .catch(console.error);\r\n  }\r\n  handleChange = (e) => this.setState({ searchField: e.target.value.toLowerCase() });\r\n    \r\n  render() {\r\n  const { monsters, searchField } = this.state;\r\n  const filteredMonsters = monsters.filter((monster) =>\r\n    monster.name.toLowerCase().includes(searchField)\r\n  );\r\n\r\n    return (\r\n    \r\n      <div className=\"app\">\r\n        <h1>Monsters Rolodex</h1>\r\n      <SearchBox\r\n        placeholder=\"Search Monsters\"\r\n        handleChange={this.handleChange}\r\n      />\r\n      <CardList monsters={filteredMonsters} />\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}